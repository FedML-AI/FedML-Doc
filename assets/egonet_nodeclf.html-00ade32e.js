import{_ as a,o as e,c as s,e as n}from"./app-7ac5536a.js";const r={},t=n(`<h1 id="federated-node-classification-over-ego-networks" tabindex="-1"><a class="header-anchor" href="#federated-node-classification-over-ego-networks" aria-hidden="true">#</a> Federated Node Classification over Ego Networks</h1><h2 id="motivation" tabindex="-1"><a class="header-anchor" href="#motivation" aria-hidden="true">#</a> Motivation</h2><p>Node classification on graphs has attracted significant attention as the importance of large-scale graphs analysis increases in various domains such as bioinformatics and commercial graphs. For example, in retail services, acquiring the qualitative node representations for items or customers is critical for improving the quality of recommendation systems. In federated settings, it is possible to represent each user in a graph as a ego network as each userâ€™s personal data can be sensitive and only visible to his/her k-hop neighbors. Thus, it is natural to consider node-level FL in social networks with clients holding the user ego-networks. To simulate this scenario, we use the open social networks and publication networks and partition them into sets of ego-networks.</p><h2 id="data-preparation" tabindex="-1"><a class="header-anchor" href="#data-preparation" aria-hidden="true">#</a> Data Preparation</h2><p>For each dataset, ego-networks needs to be sampled first. To sample, directories have to be created first and then <code>sampleEgonetworks.py</code> has to be used to generate ego-networks.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> cora
<span class="token function">mkdir</span> citeseer
<span class="token function">mkdir</span> DBLP
<span class="token function">mkdir</span> PubMed
<span class="token function">mkdir</span> CS
<span class="token function">mkdir</span> Physics

python sampleEgonetworks.py <span class="token parameter variable">--path</span> ego-networks/ <span class="token parameter variable">--data</span> cora <span class="token parameter variable">--ego_number</span> <span class="token number">1000</span> <span class="token parameter variable">--hop_number</span> <span class="token number">2</span>
python sampleEgonetworks.py <span class="token parameter variable">--path</span> ego-networks/ <span class="token parameter variable">--data</span> citeseer <span class="token parameter variable">--ego_number</span> <span class="token number">1000</span> <span class="token parameter variable">--hop_number</span> <span class="token number">2</span>
python sampleEgonetworks.py <span class="token parameter variable">--path</span> ego-networks/ <span class="token parameter variable">--data</span> DBLP <span class="token parameter variable">--ego_number</span> <span class="token number">1000</span> <span class="token parameter variable">--hop_number</span> <span class="token number">2</span>
python sampleEgonetworks.py <span class="token parameter variable">--path</span> ego-networks/ <span class="token parameter variable">--data</span> PubMed <span class="token parameter variable">--ego_number</span> <span class="token number">1000</span> <span class="token parameter variable">--hop_number</span> <span class="token number">2</span>
python sampleEgonetworks.py <span class="token parameter variable">--path</span> ego-networks/ <span class="token parameter variable">--data</span> CS <span class="token parameter variable">--ego_number</span> <span class="token number">1000</span> <span class="token parameter variable">--hop_number</span> <span class="token number">2</span>
python sampleEgonetworks.py <span class="token parameter variable">--path</span> ego-networks/ <span class="token parameter variable">--data</span> Physics <span class="token parameter variable">--ego_number</span> <span class="token number">1000</span> <span class="token parameter variable">--hop_number</span> <span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Arguments for the data preparation process</p><h2 id="training" tabindex="-1"><a class="header-anchor" href="#training" aria-hidden="true">#</a> Training</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">WORKSPACE</span><span class="token operator">=</span>./FedML/app/fedgraphnn/app/ego_networks_node_clf
<span class="token builtin class-name">cd</span> <span class="token variable">$WORKSPACE</span>

<span class="token function">sh</span> run_fed_node_clf.sh <span class="token number">4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),o=[t];function i(p,l){return e(),s("div",null,o)}const d=a(r,[["render",i],["__file","egonet_nodeclf.html.vue"]]);export{d as default};
