import{_ as l,r as t,o as d,c as o,a as e,b as n,d as a,e as i}from"./app-7ac5536a.js";const r={},c=i(`<h1 id="fedml-installation-on-nvidia-jetson-devices" tabindex="-1"><a class="header-anchor" href="#fedml-installation-on-nvidia-jetson-devices" aria-hidden="true">#</a> FedML Installation on NVIDIA Jetson Devices</h1><h2 id="run-fedml-with-docker-recommended" tabindex="-1"><a class="header-anchor" href="#run-fedml-with-docker-recommended" aria-hidden="true">#</a> Run FedML with Docker (Recommended)</h2><ul><li>Pull FedML RPI docker image</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> pull fedml/fedml:latest-nvidia-jetson-l4t-ml-r35.1.0-py3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>Run Docker with &quot;fedml login&quot;</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-t</span> <span class="token parameter variable">-i</span> <span class="token parameter variable">--runtime</span> nvidia fedml/fedml:latest-nvidia-jetson-l4t-ml-r35.1.0-py3 /bin/bash

root@8bc0de2ce0e0:/usr/src/app<span class="token comment"># fedml login 299</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="install-with-pip" tabindex="-1"><a class="header-anchor" href="#install-with-pip" aria-hidden="true">#</a> Install with pip</h2><p>This method is only recommended to those who don&#39;t want to use docker. fedml needs to be installed without dependencies because Pytorch is not available in pip on Jetson.</p>`,8),u={href:"https://forums.developer.nvidia.com/t/pytorch-for-jetson-version-1-11-now-available/72048",target:"_blank",rel:"noopener noreferrer"},p={href:"https://github.com/FedML-AI/FedML/blob/d9bc5fdfe5b4b6d9b59139d3f017702d644ce040/python/setup.py#L20",target:"_blank",rel:"noopener noreferrer"},h=e("li",null,"install fedml without dependencies since they are installed manually.",-1),m=i(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pip3 <span class="token function">install</span> fedml --no-dependencies
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="issues-and-solutions" tabindex="-1"><a class="header-anchor" href="#issues-and-solutions" aria-hidden="true">#</a> Issues and solutions:</h3><ol><li>pip3 install h5py related error:</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> subversion
<span class="token function">ln</span> <span class="token parameter variable">-s</span> /usr/include/locale.h /usr/include/xlocale.h
<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> libhdf5-serial-dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>pip3 install sklearn related error:</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> build-essential libatlas-base-dev gfortran
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,6);function v(b,f){const s=t("ExternalLinkIcon");return d(),o("div",null,[c,e("ol",null,[e("li",null,[n("install Pytorch using "),e("a",u,[n("python wheels"),a(s)])]),e("li",null,[n("install rest of the "),e("a",p,[n("dependencies"),a(s)]),n(" with pip3 except torch and torchvision:")]),h]),m])}const g=l(r,[["render",v],["__file","jetson.html.vue"]]);export{g as default};
