import{_ as d,r as l,o,c as s,a as e,d as t,w as n,b as a,e as i}from"./app-7ac5536a.js";const h={},c=i('<h1 id="fedml-benchmarks" tabindex="-1"><a class="header-anchor" href="#fedml-benchmarks" aria-hidden="true">#</a> FedML Benchmarks</h1><h2 id="federated-graph-neural-networks-fedgraphnn" tabindex="-1"><a class="header-anchor" href="#federated-graph-neural-networks-fedgraphnn" aria-hidden="true">#</a> Federated Graph Neural Networks (FedGraphNN)</h2><p>For FedGraphNN, we require the latest version of PyG.</p><h3 id="graph-level-federated-graph-neural-networks" tabindex="-1"><a class="header-anchor" href="#graph-level-federated-graph-neural-networks" aria-hidden="true">#</a> Graph-Level Federated Graph Neural Networks</h3>',4),u=e("h3",{id:"subgraph-level-federated-graph-neural-networks",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subgraph-level-federated-graph-neural-networks","aria-hidden":"true"},"#"),a(" Subgraph-Level Federated Graph Neural Networks")],-1),p=e("h3",{id:"node-level-federated-graph-neural-networks",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#node-level-federated-graph-neural-networks","aria-hidden":"true"},"#"),a(" Node-Level Federated Graph Neural Networks")],-1),f=e("h3",{id:"federated-ogb-and-ogb-lsc-datasets",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#federated-ogb-and-ogb-lsc-datasets","aria-hidden":"true"},"#"),a(" Federated OGB and OGB-LSC Datasets")],-1),g=e("ul",null,[e("li",null,"Under construction")],-1),m=e("h4",{id:"challenges-and-leaderboards",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#challenges-and-leaderboards","aria-hidden":"true"},"#"),a(" Challenges and Leaderboards")],-1),k=e("ul",null,[e("li",null,"Under construction")],-1);function _(b,w){const r=l("RouterLink");return o(),s("div",null,[c,e("ul",null,[e("li",null,[e("p",null,[t(r,{to:"/benchmark/fedgraphnn/moleculenet.html"},{default:n(()=>[a("Federated Molecular Property Prediction with Moleculenet Datasets")]),_:1}),a(": An example to illustrate how to simulate cross-silo horizontal federated learning in data silos for molecular property predictino via GNNs.")])]),e("li",null,[e("p",null,[t(r,{to:"/benchmark/fedgraphnn/social_graphs.html"},{default:n(()=>[a("Federated Social Network Classification")]),_:1}),a(": An example to illustrate how to cross-silo federated network classification in data silos for molecular property predictino via GIN.")])])]),u,e("ul",null,[e("li",null,[t(r,{to:"/benchmark/fedgraphnn/recsys.html"},{default:n(()=>[a("Federated Recommender System Subgraph Link Prediction")]),_:1}),a(": An example to perform link prediction over dispersed subgraphs via GNNs.")])]),p,e("ul",null,[e("li",null,[e("p",null,[t(r,{to:"/benchmark/fedgraphnn/egonet_nodeclf.html"},{default:n(()=>[a("Federated Ego-Network Node Classification")]),_:1}),a(": An example to classify nodes in a social networks in federated settings via ego-network representations.")])]),e("li",null,[e("p",null,[t(r,{to:"/benchmark/fedgraphnn/egonet_linkpred.html"},{default:n(()=>[a("Federated Ego-Network Link Prediction")]),_:1}),a(": An example to determine link/connection types in a social networks in federated settings via ego-network representations.")])])]),f,g,m,k])}const v=d(h,[["render",_],["__file","examples.html.vue"]]);export{v as default};
