import{_ as t}from"./mlops_workflow_new-8802a177.js";import{_ as i,a as o,b as r,c as p,d as c,e as d,f as u,g as m,h as v}from"./MLOps_experimental_tracking_logging-d89a6af8.js";import{_ as g,r as h,o as b,c as k,a,b as e,d as n,e as l}from"./app-7ac5536a.js";const f={},_=a("h1",{id:"fedml-mlops-user-guide",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#fedml-mlops-user-guide","aria-hidden":"true"},"#"),e(" FedML MLOps User Guide")],-1),y={href:"https://www.youtube.com/watch?v=Xgm0XEaMlVQ",target:"_blank",rel:"noopener noreferrer"},w=l('<p><strong>Write Once, Run Anywhere: Seamlessly Migrate Your Local Development to the Real-world Edge-cloud Deployment</strong></p><ul><li>How Does FedML MLOps Platform Work?</li><li>Local Development and Building MLOps Packages</li><li>Create Application and Upload Local Packages</li><li>Install FedML Agent: fedml login $account_id</li><li>Invite Collaborators, Create a Group and a Project</li><li>Start Run (Training) via Automated Deployment and Scaling</li><li>Experimental Tracking via Simplified Project Management</li></ul><h3 id="how-does-fedml-mlops-platform-work" tabindex="-1"><a class="header-anchor" href="#how-does-fedml-mlops-platform-work" aria-hidden="true">#</a> How Does FedML MLOps Platform Work?</h3><p><img src="'+t+'" alt="image"> <br> Figure 1: the workflow describing how MLOps works</p><p>MLOps works as the figure shown above. Such a workflow is handled by a web UI to avoid complex deployment. Now please create an account.</p>',5),x=a("br",null,null,-1),M={href:"https://open.fedml.ai",target:"_blank",rel:"noopener noreferrer"},L=a("h3",{id:"local-development-and-building-mlops-packages",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#local-development-and-building-mlops-packages","aria-hidden":"true"},"#"),e(" Local Development and Building MLOps Packages")],-1),O={href:"https://doc.fedml.ai/cross-silo/examples/mqtt_s3_fedavg_mnist_lr_example.html",target:"_blank",rel:"noopener noreferrer"},T={href:"https://github.com/FedML-AI/FedML/tree/master/python/examples/cross_silo/mqtt_s3_fedavg_mnist_lr_example/one_line",target:"_blank",rel:"noopener noreferrer"},E=l('<h3 id="_1-create-application-and-upload-local-packages" tabindex="-1"><a class="header-anchor" href="#_1-create-application-and-upload-local-packages" aria-hidden="true">#</a> 1. Create Application and Upload Local Packages</h3><p><img src="'+i+`" alt="image"></p><p>You can use the following FedML CLI to build the package, and then upload the packages as shown in the figure above.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>fedml build <span class="token parameter variable">-t</span> client <span class="token parameter variable">-sf</span> <span class="token variable">$SOURCE</span> <span class="token parameter variable">-ep</span> <span class="token variable">$ENTRY</span> <span class="token parameter variable">-cf</span> <span class="token variable">$CONFIG</span> <span class="token parameter variable">-df</span> <span class="token variable">$DEST</span>

Usage: fedml build <span class="token punctuation">[</span>OPTIONS<span class="token punctuation">]</span>

  Commands <span class="token keyword">for</span> open.fedml.ai MLOps platform

Options:
  -t, <span class="token parameter variable">--type</span> TEXT            client or server? <span class="token punctuation">(</span>value: client<span class="token punctuation">;</span> server<span class="token punctuation">)</span>
  -sf, <span class="token parameter variable">--source_folder</span> TEXT  the <span class="token builtin class-name">source</span> code folder path
  -ep, <span class="token parameter variable">--entry_point</span> TEXT    the entry point of the <span class="token builtin class-name">source</span> code
  -cf, <span class="token parameter variable">--config_folder</span> TEXT  the config folder path
  -df, <span class="token parameter variable">--dest_folder</span> TEXT    the destination package folder path
  <span class="token parameter variable">--help</span>                     Show this message and exit.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The following script uses <code>examples/cross_silo/mqtt_s3_fedavg_mnist_lr_example/one_line</code> as an example to illustrate the arguments for building MLOps packages. Please replace related values with your own.</p><ul><li>Build the deployable package for the client</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> python/examples/cross_silo/mqtt_s3_fedavg_mnist_lr_example/one_line

<span class="token assign-left variable">SOURCE</span><span class="token operator">=</span>client
<span class="token assign-left variable">ENTRY</span><span class="token operator">=</span>torch_client.py
<span class="token assign-left variable">CONFIG</span><span class="token operator">=</span>config
<span class="token assign-left variable">DEST</span><span class="token operator">=</span>./mlops
fedml build <span class="token parameter variable">-t</span> client <span class="token parameter variable">-sf</span> <span class="token variable">$SOURCE</span> <span class="token parameter variable">-ep</span> <span class="token variable">$ENTRY</span> <span class="token parameter variable">-cf</span> <span class="token variable">$CONFIG</span> <span class="token parameter variable">-df</span> <span class="token variable">$DEST</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Note: for ENTRY, please only specify the file name (torch_client.py) under the SOURCE folder, please do not pass the absolute path.</p><p>If the script works correctly, the console log should be as follows.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">(</span>mnn37<span class="token punctuation">)</span> chaoyanghe@Chaoyangs-MBP python % fedml build <span class="token parameter variable">-t</span> client <span class="token parameter variable">-sf</span> <span class="token variable">$SOURCE</span> <span class="token parameter variable">-ep</span> <span class="token variable">$ENTRY</span> <span class="token parameter variable">-cf</span> <span class="token variable">$CONFIG</span> <span class="token parameter variable">-df</span> <span class="token variable">$DEST</span>
Argument <span class="token keyword">for</span> type: client
Argument <span class="token keyword">for</span> <span class="token builtin class-name">source</span> folder: examples/cross_silo/mqtt_s3_fedavg_mnist_lr_example/one_line/client
Argument <span class="token keyword">for</span> entry point: torch_client.py
Argument <span class="token keyword">for</span> config folder: examples/cross_silo/mqtt_s3_fedavg_mnist_lr_example/one_line/config
Argument <span class="token keyword">for</span> destination package folder: ./mlops
Now, you are building the fedml packages <span class="token function">which</span> will be used <span class="token keyword">in</span> the MLOps platform.
The packages will be used <span class="token keyword">for</span> client training and server aggregation.
When the building process is completed, you will <span class="token function">find</span> the packages <span class="token keyword">in</span> the directory as follows: ./mlops/dist-packages.
Then you may upload the packages on the configuration page <span class="token keyword">in</span> the MLOps platform to start the federated learning flow.
Building<span class="token punctuation">..</span>.
You have finished all building process. 
Now you may use ./mlops/client-package.zip to start your federated learning run.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Build the deployable package for the server</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">SOURCE</span><span class="token operator">=</span>server
<span class="token assign-left variable">ENTRY</span><span class="token operator">=</span>torch_server.py
<span class="token assign-left variable">CONFIG</span><span class="token operator">=</span>config
<span class="token assign-left variable">DEST</span><span class="token operator">=</span>./mlops
fedml build <span class="token parameter variable">-t</span> server <span class="token parameter variable">-sf</span> <span class="token variable">$SOURCE</span> <span class="token parameter variable">-ep</span> <span class="token variable">$ENTRY</span> <span class="token parameter variable">-cf</span> <span class="token variable">$CONFIG</span> <span class="token parameter variable">-df</span> <span class="token variable">$DEST</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Note: for ENTRY, please only specify the file name (torch_server.py) under the SOURCE folder, please do not pass the absolute path.</p><p>If the script works correctly, the console log should be as follows.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">(</span>mnn37<span class="token punctuation">)</span> chaoyanghe@Chaoyangs-MBP python % fedml build <span class="token parameter variable">-t</span> server <span class="token parameter variable">-sf</span> <span class="token variable">$SOURCE</span> <span class="token parameter variable">-ep</span> <span class="token variable">$ENTRY</span> <span class="token parameter variable">-cf</span> <span class="token variable">$CONFIG</span> <span class="token parameter variable">-df</span> <span class="token variable">$DEST</span>
Argument <span class="token keyword">for</span> type: server
Argument <span class="token keyword">for</span> <span class="token builtin class-name">source</span> folder: examples/cross_silo/mqtt_s3_fedavg_mnist_lr_example/one_line/server
Argument <span class="token keyword">for</span> entry point: torch_server.py
Argument <span class="token keyword">for</span> config folder: examples/cross_silo/mqtt_s3_fedavg_mnist_lr_example/one_line/config
Argument <span class="token keyword">for</span> destination package folder: ./mlops
Now, you are building the fedml packages <span class="token function">which</span> will be used <span class="token keyword">in</span> the MLOps platform.
The packages will be used <span class="token keyword">for</span> client training and server aggregation.
When the building process is completed, you will <span class="token function">find</span> the packages <span class="token keyword">in</span> the directory as follows: ./mlops/dist-packages.
Then you may upload the packages on the configuration page <span class="token keyword">in</span> the MLOps platform to start the federated learning flow.
Building<span class="token punctuation">..</span>.
You have finished all building process. 
Now you may use ./mlops/server-package.zip to start your federated learning run.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The output package locates at <code>mlops</code> folder.</p><h3 id="_2-install-fedml-agent-fedml-login-account-id" tabindex="-1"><a class="header-anchor" href="#_2-install-fedml-agent-fedml-login-account-id" aria-hidden="true">#</a> 2. Install FedML Agent: fedml login $account_id</h3>`,17),N={href:"https://doc.fedml.ai/starter/installation.html",target:"_blank",rel:"noopener noreferrer"},C=l(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>fedml login $account_id
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Please change $account_id to your own (see the screenshot shown below).</p><p><img src="`+o+`" alt="image"> Figure 2: login your edge devices to our platform</p><p>In the edge device, you will see the log as below if the script works correctly. You can also press the &quot;refresh&quot; button in Figure 2 to check the status of your device.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">(</span>fedml3.7<span class="token punctuation">)</span> chaoyanghe@Chaoyangs-MBP cross_silo % fedml login <span class="token number">302</span>
client None, server None
login as client: True, as server: None
/Users/chaoyanghe/sourcecode/FedML_product/FedML/python/fedml/cli/edge_deployment/client_login.py
<span class="token punctuation">(</span>fedml3.7<span class="token punctuation">)</span> chaoyanghe@Chaoyangs-MBP cross_silo % Namespace<span class="token punctuation">(</span>local_server<span class="token operator">=</span><span class="token string">&#39;127.0.0.1&#39;</span>, <span class="token assign-left variable">type</span><span class="token operator">=</span><span class="token string">&#39;login&#39;</span>, <span class="token assign-left variable">user</span><span class="token operator">=</span><span class="token string">&#39;302&#39;</span>, <span class="token assign-left variable">version</span><span class="token operator">=</span><span class="token string">&#39;release&#39;</span><span class="token punctuation">)</span>
Namespace<span class="token punctuation">(</span>account_id<span class="token operator">=</span><span class="token number">302</span>, <span class="token assign-left variable">cloud_region</span><span class="token operator">=</span><span class="token string">&#39;&#39;</span>, <span class="token assign-left variable">config_version</span><span class="token operator">=</span><span class="token string">&#39;release&#39;</span>, <span class="token assign-left variable">current_running_dir</span><span class="token operator">=</span><span class="token string">&#39;/Users/chaoyanghe/fedml-client&#39;</span>, <span class="token assign-left variable">device_id</span><span class="token operator">=</span><span class="token string">&#39;0xb6ff42da6a7e&#39;</span>, <span class="token assign-left variable">local_server</span><span class="token operator">=</span><span class="token string">&#39;127.0.0.1&#39;</span>, <span class="token assign-left variable">log_file_dir</span><span class="token operator">=</span><span class="token string">&#39;/Users/chaoyanghe/fedml-client/fedml/logs&#39;</span>, <span class="token assign-left variable">os_name</span><span class="token operator">=</span><span class="token string">&#39;MacOS&#39;</span>, <span class="token assign-left variable">type</span><span class="token operator">=</span><span class="token string">&#39;login&#39;</span>, <span class="token assign-left variable">user</span><span class="token operator">=</span><span class="token number">302</span>, <span class="token assign-left variable">version</span><span class="token operator">=</span><span class="token string">&#39;release&#39;</span><span class="token punctuation">)</span>
Current directory of client agent: /Users/chaoyanghe/fedml-client
client ids:<span class="token punctuation">[</span><span class="token number">266</span><span class="token punctuation">]</span>
log <span class="token function">file</span> path /Users/chaoyanghe/fedml-client/fedml/logs/fedml-run-0-edge-266-upload.log
login: unique_device_id <span class="token operator">=</span> @0xb6ff42da6a7e.MacOS
login: edge_id <span class="token operator">=</span> <span class="token number">266</span>
subscribe: flserver_agent/266/start_train
subscribe: flserver_agent/266/stop_train
subscribe: fl_client/flclient_agent_266/status
Congratulations, you have logged into the FedML MLOps platform successfully<span class="token operator">!</span>
Your device <span class="token function">id</span> is @0xb6ff42da6a7e.MacOS. You may review the device <span class="token keyword">in</span> the MLOps edge device list.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-invite-collaborators-create-a-group-and-a-project" tabindex="-1"><a class="header-anchor" href="#_3-invite-collaborators-create-a-group-and-a-project" aria-hidden="true">#</a> 3. Invite Collaborators, Create a Group and a Project</h2><ul><li>3.1 Invite Collaborators <br></li></ul><p>(1) Copy your invitation link</p><p>(2) Send the invitation link to your collaborators via any communication tools e.g., Slack, Facebook Messenger, Email.</p><p>(3) Your collaborators can open the URL, and accept the invitation</p><p>Now you and your collaborators should be able to see each other on <code>My Collaborators</code> page.</p><p><img src="`+r+'" alt="image"> Figure 3: invite your collaborators</p><ul><li>3.2 Group Management</li></ul><p>After inviting your collaborators, you can <code>Create New Group</code>, input the group name, and select your collaborators into the group.</p><p>We support a topology visualization to assist you and your collaborators in checking all collaborative edge devices in that group.</p><p>Note that after creation, our platform will add newly bound devices from all members to the group. If you would like to change the members in this group, Please create a new group for it.</p><p><img src="'+p+'" alt="image"> Figure 4: showing the topology of the group</p><h2 id="_4-start-run-training-via-automated-deployment-and-scaling" tabindex="-1"><a class="header-anchor" href="#_4-start-run-training-via-automated-deployment-and-scaling" aria-hidden="true">#</a> 4. Start Run (Training) via Automated Deployment and Scaling</h2><p>Now let&#39;s create a project and get training started!</p><ul><li>Create a new project for a specific group or utilize the existing project you created before</li><li>Open a project and create a new run under the project, by clicking <code>Start</code>, the run will get started.</li></ul><p><img src="'+c+'" alt="image"> Figure 5: create and start a new run</p><h2 id="_5-experimental-tracking-via-simplified-project-management" tabindex="-1"><a class="header-anchor" href="#_5-experimental-tracking-via-simplified-project-management" aria-hidden="true">#</a> 5. Experimental Tracking via Simplified Project Management</h2><p>Now you are ready to start the training, enjoy! We provide the following experimental tracking abilities as follows.</p><ul><li><p>monitoring device status (including logging in each device) and training progress <img src="'+d+'" alt="image"></p></li><li><p>visualizing training results <img src="'+u+'" alt="image"></p></li><li><p>visualizing system performance <img src="'+m+'" alt="image"></p></li><li><p>model downloading/serving</p></li><li><p>distributed logging <img src="'+v+'" alt="image"></p></li></ul><p>More advanced features will be supported soon. We appreciate your valuable feedback.</p>',25);function S(F,I){const s=h("ExternalLinkIcon");return b(),k("div",null,[_,a("p",null,[e("Video Tutorial: "),a("a",y,[e("https://www.youtube.com/watch?v=Xgm0XEaMlVQ"),n(s)])]),w,a("ul",null,[a("li",null,[e("Instructions for registration: "),x,e(" Please open "),a("a",M,[e("https://open.fedml.ai"),n(s)]),e(' and click "Sign Up".')])]),L,a("p",null,[e("After you finish the local developing/debugging of the FedML project using FedML library (e.g., successfully run the example "),a("a",O,[e("https://doc.fedml.ai/cross-silo/examples/mqtt_s3_fedavg_mnist_lr_example.html"),n(s)]),e("), you can now deploy it into the real-world edge-cloud system.")]),a("p",null,[e("Next, we use the cross-silo project example at "),a("a",T,[e("https://github.com/FedML-AI/FedML/tree/master/python/examples/cross_silo/mqtt_s3_fedavg_mnist_lr_example/one_line"),n(s)]),e(" to guide you through how to deploy it and collaborate with others data silos.")]),E,a("p",null,[e("After "),a("a",N,[e("installing the FedML library"),n(s)]),e(" at your edge devices, you can bind it to MLOps platform with a simple CLI:")]),C])}const U=g(f,[["render",S],["__file","user_guide_beehive.html.vue"]]);export{U as default};
